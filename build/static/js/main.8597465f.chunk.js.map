{"version":3,"sources":["api/fetchWeatherData.js","api/fetchQuote.js","api/fetchImages.js","component/Home/Home.js","media/brain.png","component/Login/Login.js","App.js","index.js"],"names":["userData","JSON","parse","localStorage","getItem","fetchWeather","query","a","axios","get","params","q","city","units","APPID","data","fetchQuote","quote","fetchImages","images","Home","setLogOut","setSubmit","useState","setQuery","weather","setWeather","setQuote","changeCity","setChangeCity","userName","setUserName","changeUserName","setChangeUserName","updateQuote","setUpdateQuote","setcurrentTime","search","e","key","useEffect","then","res","console","log","interval","setInterval","Date","clearInterval","update","setItem","stringify","count","setCount","name","style","color","className","onClick","window","location","reload","today","hours","getHours","minutes","getMinutes","getSeconds","getDate","type","placeholder","onChange","target","value","onKeyPress","greet","hrs","getGreet","main","src","icon","alt","description","Math","round","temp","Login","setUserData","modifyName","slice","toUpperCase","toLowerCase","onSubmit","preventDefault","Logo","autoComplete","id","required","htmlFor","width","marginLeft","App","submit","submitData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8597465f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'eec092d9fecc9232502e3d82e23bf61c';\r\n\r\nconst userData = JSON.parse(localStorage.getItem('userData'));\r\n export const fetchWeather = async (query) => {\r\n    const { data } = await axios.get(URL, {\r\n        params: {\r\n            q:query?query:userData.city?userData.city:'delhi',\r\n            units: 'metric',\r\n            APPID: API_KEY\r\n        }\r\n    });\r\n    return data;\r\n}","import axios from 'axios';\r\n\r\nconst URL = 'https://type.fit/api/quotes';\r\n// const API_KEY = 'eec092d9fecc9232502e3d82e23bf61c';\r\n\r\n export const fetchQuote = async () => {\r\n    const quote = await axios.get(URL);\r\n    return quote;\r\n}\r\n\r\n// fetch(\"https://type.fit/api/quotes\")\r\n//   .then(function(response) {\r\n//     return response.json();\r\n//   })\r\n//   .then(function(data) {\r\n//     console.log(data);\r\n//   });","import axios from 'axios';\r\n\r\nconst URL = 'https://api.unsplash.com/search/photos/?client_id=K08_VHYAe7YuNE3o73ZVgoxoXC4KNhocHsCmWu_D2Y8&query=mountain&orientation=landscape';\r\n\r\n\r\n export const fetchImages = async () => {\r\n    const images = await axios.get(URL);\r\n    return images;\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchWeather } from \"../../api/fetchWeatherData\";\r\nimport \"./Home.css\";\r\nimport { fetchQuote } from \"../../api/fetchQuote\";\r\nimport Success from \"../success/success\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport {fetchImages } from '../../api/fetchImages';\r\n\r\n\r\n\r\nconst Home = ({setLogOut, setSubmit}) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n  const [quote, setQuote] = useState([]);\r\n  const [focus, setFocus] = useState(\"\");\r\n  const [showTask, setShowTask] = useState(false);\r\n  const [inputCheck, setinputCheck] = useState(\"\");\r\n  const [changeCity, setChangeCity] = useState(false);\r\n  const [userName, setUserName] = useState('Mayank');\r\n  const [changeUserName, setChangeUserName] = useState(false);\r\n    let [updateQuote, setUpdateQuote] = useState(0);\r\n    let [currentTime, setcurrentTime] = useState('');\r\n\r\n  const search = async (e) => {\r\n    if(e && e.key === \"Enter\") {\r\n      const data = await fetchWeather(query);\r\n      setWeather(data);\r\n      setQuery(\"\");\r\n      setChangeCity(false)\r\n    }else{\r\n        const data = await fetchWeather(userData.city);\r\n        setWeather(data);\r\n    }\r\n  };\r\n \r\n  useEffect(() => {\r\n     search();\r\n    const quotes = fetchQuote();\r\n    quotes.then((res) => setQuote(res.data));  //1643\r\n    const images = fetchImages();\r\n    images.then((res) => console.log(res.data));\r\n    \r\n  }, []);\r\n\r\n\r\nconst aTalk = ['It\\'s a new day.', 'You are the best version of yourself',\r\n                'You can achieve all your dreams', 'Today is a miracle.',\r\n                'Others donâ€™t define you', 'Life goes on', 'You deserve the best',\r\n                 'You\\'re the best', 'You can do anything.','You\\'re a winner',\r\n                'You\\'re unstoppable today', 'You\\'re phenomenal', 'You looks perfect today'];\r\n\r\n\r\n\r\n  let today = () => {\r\n    setcurrentTime(new Date());\r\n  };\r\n  function getDate() {\r\n    let today = new Date();\r\n    let hours = today.getHours();\r\n    let minutes = today.getMinutes();\r\n    let seconds = today.getSeconds();\r\n    let currentTime = `${hours > 9 ? hours : `0${hours}`}:${minutes > 9 ? minutes : `0${minutes}`}`;\r\n    // if(hours === 9 && minutes === 18 && seconds === 1){\r\n      \r\n    // }  \r\n    return currentTime;\r\n  }\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      today();\r\n    },1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n     setInterval(() => {\r\n       setUpdateQuote(updateQuote++);\r\n       let update = updateQuote;\r\n       localStorage.setItem(\"quoteCount\", JSON.stringify(update));   \r\n    }, 86400000);\r\n  }, []);\r\n\r\n  \r\n  function getGreet() {\r\n    let today = new Date();\r\n    let hrs = today.getHours();\r\n    let greet;\r\n\r\n    if (hrs < 12 && hrs >= 6) greet = \"Good morning\";\r\n    else if (hrs >= 12 && hrs <= 17) greet = \"Good afternoon\";\r\n    else if (hrs >= 17 || (hrs >= 0 && hrs < 6)) greet = \"Good evening\";\r\n\r\n    return greet;\r\n  }\r\n\r\n  function addTask(e) {\r\n    if (focus && e.key === \"Enter\") {\r\n      localStorage.setItem(\"focus\", JSON.stringify(focus));\r\n      setShowTask(true);\r\n    }\r\n  }\r\n\r\n  function updateUserName(e){\r\n    if ( e.key === \"Enter\") {\r\n        setChangeUserName(false)\r\n      }\r\n  }\r\n  const task = JSON.parse(localStorage.getItem('focus'));\r\n\r\n  const userData = JSON.parse(localStorage.getItem('userData'));\r\n  let [count, setCount] = useState(0);\r\n  if(userData.name && userData.city && count === 0) {\r\n    console.log(userData);\r\n    setUserName(userData.name);\r\n    setCount(count+1);\r\n  }\r\n\r\n   function logOut(){\r\n     setSubmit(false);\r\n     localStorage.setItem('submit', JSON.stringify(false));\r\n     localStorage.setItem(\"quoteCount\", JSON.stringify(0));\r\n     window.location.reload(true);\r\n   }\r\n\r\n   const getQuoteCount = JSON.parse(localStorage.getItem('quoteCount'));\r\n   const finalCount = getQuoteCount?getQuoteCount:0 ;\r\n\r\n  return (\r\n    <div\r\n      style={{ color: \"white\" }}\r\n      className=\"main-container\"\r\n    >\r\n      <button className=\"logout\" onClick={logOut}>Log out</button>\r\n      <p className=\"time\">{getDate()}</p>\r\n      <div className=\"wish-container\">\r\n          {\r\n              changeUserName?(\r\n                <input\r\n                className=\"focus_input\"\r\n                type=\"text\"\r\n                placeholder=\"Your Name\"\r\n                onChange={(e) => setUserName(e.target.value)}\r\n                onKeyPress={updateUserName}\r\n              />\r\n              ): (\r\n                  <>\r\n                    <p className=\"wishes\">{getGreet()}, <span className=\"userName\">{userName}</span>.</p>\r\n                    <span className=\"change-name\" onClick={() => setChangeUserName(true)}>Change</span>\r\n                  </>\r\n              )\r\n          }\r\n      \r\n      </div>\r\n      <div className=\"temp-container\">\r\n          {\r\n              weather.main ? (\r\n                <>\r\n                <div className=\"temp-img--container\">\r\n                <img\r\n                  className=\"temp_img\"\r\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description}\r\n                />\r\n                <p className=\"temp\">{Math.round(weather.main.temp)}Â°</p>\r\n              </div>\r\n                   \r\n                      {\r\n                  changeCity? (\r\n                      <input className=\"temp-input\" \r\n                             type='text'\r\n                             placeholder=\"City...\"\r\n                             value={query}\r\n                             onChange={(e) => setQuery(e.target.value)}\r\n                             onKeyPress={search}\r\n                     />\r\n                  ): (\r\n                      <p className=\"temp-city\" onClick={(e) => setChangeCity(true)}>{weather.name}</p>\r\n                  )\r\n              }\r\n                   </>\r\n              ): (\r\n                  <>\r\n                <div className=\"temp-img--container\">\r\n                <img\r\n                  className=\"temp_img\"\r\n                  src=\"https://img-premium.flaticon.com/png/512/1888/premium/1888313.png?token=exp=1623954992~hmac=32ea7ab6d5b017056158092cc860eaf0\"\r\n                  alt=\"icon\"\r\n                />\r\n                <p className=\"temp\">30Â°</p>\r\n              </div>\r\n      \r\n              {\r\n                  changeCity ? (\r\n                      <input className=\"temp-input\" \r\n                             type='text'\r\n                             placeholder=\"City...\"\r\n                             value={query}\r\n                             onChange={(e) => setQuery(e.target.value)}\r\n                             onKeyPress={search}\r\n                     />\r\n                     \r\n                  ): (\r\n                      <p className=\"temp-city\" onClick={(e) => setChangeCity(true)}>enter city</p>\r\n                  )\r\n              }\r\n          </>\r\n              )\r\n          }\r\n      </div>\r\n\r\n\r\n      {/* {quote[finalCount] && quote[finalCount] !== \"undefined\" && (\r\n        <div className=\"quote-container\" >\r\n          <p className=\"quote\">{quote[finalCount].text}</p>\r\n          <p className=\"quote-author\">{quote[finalCount].author}</p>\r\n        </div>\r\n      )} */}\r\n      {/* <input \r\n              type=\"text\"\r\n              className=\"search\"\r\n              placeholder=\"Search...\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              onKeyPress={search}\r\n              /> */}\r\n      {/* {weather.main && (\r\n                  <div className=\"city\">\r\n                     <h2 className=\"city-name\">\r\n                         <span>{weather.name}</span>\r\n                         <sup>{weather.sys.country}</sup>\r\n                     </h2>\r\n                     <div className=\"city-temp\">\r\n                         {Math.round(weather.main.temp)}\r\n                         <sup>&deg;C</sup>\r\n                     </div>\r\n                     <div className=\"info\">\r\n                         <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description}/>\r\n                         <p className=\"desc\">{weather.weather[0].description}</p>\r\n                     </div>\r\n                  </div>\r\n\r\n              )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n// userName\r\n// focus\r\n// quotenumber\r\n// heynumber\r\n// city","export default __webpack_public_path__ + \"static/media/brain.e909640d.png\";","import React ,{useState} from 'react';\r\nimport './style.css';\r\nimport Logo from '../../media/brain.png';\r\n\r\nconst Login = ({setSubmit}) => {\r\n   \r\n    const [userData, setUserData] = useState({\r\n        name: '',\r\n        city: ''\r\n    })\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n      setUserData({name:'',city:''});\r\n      setSubmit(true);\r\n      localStorage.setItem(\"submit\", JSON.stringify(true));\r\n    }\r\n\r\n    const modifyName = (name) => {\r\n      let first = name.slice(0,1).toUpperCase();\r\n      let last = name.slice(1).toLowerCase();\r\n      let modifyName = first+last;\r\n      return modifyName;\r\n      \r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">           \r\n            <form onSubmit={handleSubmit} className=\"child-container\">\r\n            <div className=\"logo--container\">\r\n               <img className=\"logo\" src={Logo} alt=\"logo\"/>\r\n            </div>\r\n            <h1 className=\"logo--name\">Nurture</h1>\r\n            <p className=\"logo--tagline\">Nurture your mind with great thoughts.</p>\r\n              <div className=\"form_group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form__input\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"First Name\"\r\n                    id=\"name\"\r\n                    required\r\n                    value={userData.name}\r\n                    onChange={(e) =>\r\n                        setUserData({ ...userData, name: modifyName(e.target.value) })\r\n                      }\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form__label\">\r\n                    First Name\r\n                  </label>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form__input\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"City\"\r\n                    id=\"name\"\r\n                    required\r\n                    value={userData.city}\r\n                    onChange={(e) =>\r\n                        setUserData({ ...userData, city: e.target.value })\r\n                      }\r\n                  />\r\n                  <label htmlFor=\"name\" className=\"form__label\">\r\n                    City\r\n                  </label>\r\n                </div>\r\n         \r\n            <div className=\"form_group btn\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"form_button\"\r\n                  >\r\n                    Log In\r\n                    <img\r\n                      style={{ width: \"20%\", marginLeft: \"10px\" }}\r\n                      src=\"https://media.giphy.com/media/ggiIT76o0nKxBq671w/giphy.gif\"\r\n                      alt=\"click\"\r\n                    ></img>\r\n                  </button>\r\n                </div>\r\n                <p className=\"logo--tagline last-tagline\">To believe in the heroic makes heroes.</p>\r\n            </form>   \r\n            <p className=\"copyright\">\t&#169; Mayank Sonkar 2021</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n//Nurture your mind with great thoughts. To believe in the heroic makes heroes.","import React, {useState} from 'react';\r\nimport Home from './component/Home/Home';\r\nimport Login from './component/Login/Login';\r\n\r\nconst App = () => {\r\n\r\n const [submit, setSubmit] = useState(false);\r\n const [logout, setLogOut] = useState(true);\r\n\r\n\r\nconst submitData = JSON.parse(localStorage.getItem('submit'));\r\nconsole.log(submit)\r\n  return (\r\n    <div>\r\n      {\r\n       submitData?<Home setLogOut={setLogOut} setSubmit={setSubmit}/>:<Login setSubmit={setSubmit} />\r\n      }      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}